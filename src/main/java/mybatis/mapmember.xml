<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapMember">
	<!-- 회원 가입하기 -->
	<insert id="insertData" parameterType="AlMember">
		insert into members(id, password, name, nickname, email, gender, height, career, aim_weight, address1, address2, period, birth) 
		values(#{id}, #{password}, #{name}, #{nickname}, #{email}, #{gender}, #{height}, #{career}, #{aim_weight}, #{address1}, #{address2}, #{period}, #{birth})
	</insert>
	
	<select id="selectData" resultType="AlMember">
		select * from members where id = #{id} and password = #{password}
	</select>
	
	<select id="selectById" parameterType="String" resultType="AlMember"> 
		select * from members where id = #{id} 
	</select>

	<!-- 회원 최신 몸무게 가져오기 -->
	<select id="selectMyWeight" parameterType="String" resultType="int">
		select weight from myweight where mem_id=#{id} and rownum=1 order by
		weight_id desc
	</select>

	<!-- 회원 정보 수정하기 -->
	<update id="updateMember" parameterType="AlMember">
		update members set email = #{email}, password = #{password}, height =
		#{height}, nickname = #{nickname}, address = #{address}, aim_weight =
		#{aim_weight} where id = #{id}
	</update>
	
	<select id="selectDataID" resultType="AlMember">
      select * from members where id = #{id}
   </select>
   
   <select id="selectDataNickname" resultType="AlMember">
      select * from members where nickname = #{nickname}
   </select>
   
	<select id="selectForOrder" resultType="AlMember">
		select address1, address2, point, nickname from members where id = #{id}
	</select>
   
   <update id="changePoint" parameterType="AlOrder">
		update members set point = point - #{total_price} where id = #{mem_id}
	</update>
   
   <!-- 회원 리스트 개수 출력 -->
   <select id="SelectTotalCount" resultType="int">
		select count(*) as cnt from members
	</select>	
   
   <!-- 모든 회원 정보들 리스트로 출력 -->
   <select id="SelectDataList" resultType="AlMember">
		select*from members
	</select>
   
   <update id="giveRoutine" parameterType="AlMember" >
		update members set ro_id=#{ro_id} where id = #{id}
	</update>
	
	<delete id="DeleteMember" parameterType="String">
		delete from members	where id = #{id}
	</delete>	
	
	
	<!-- 최근 7개의 몸무게 변화 데이터 가져온다 / 부등호를 TAG로 인식하기때문에 <![CDATA[내용]]>으로 묶어준다 -->
	<select id="SelectMyWeightList" resultType="AlWeight">
		<![CDATA[SELECT * FROM ( SELECT * FROM myweight where mem_id=#{id} ORDER BY regdate desc) e WHERE rownum <= 7]]>
	</select>
	
	<!-- 나의 몸무게 변화 입력 -->
	<insert id="insertMyWeight" parameterType="AlWeight">
		insert into myweight(mem_id, weight, regdate, weight_id) 
		values(#{mem_id}, #{weight}, #{regdate}, myweight_seq.nextval)
	</insert>
	
	
   	<!-- 아이디 찾기 --> 
	<select id="findId" resultType="String"> 
		select id from members where name = #{name} and birth = #{birth} 
	</select> 
	 
	<!-- 패스워드 찾기 --> 
	<select id="findPassword" resultType="String"> 
		select password from members where id = #{id} and email = #{email} 
	</select> 
	
	
	<!-- 초기 비밀번호로 변환 --> 
	<update id="changePassword" parameterType="String" > 
		update members set password = 1234 where id = #{id} 
	</update> 
	 
	 
	<!--초기 비밀번호를 반환  --> 
	<select id="returnPassword" resultType="String"> 
		select password from members where id = #{id} 
	</select> 
    
    
   <!-- 좋아요 1개당 10point 적립 --> 
   <update id="insertPoint" parameterType="AlMember"> 
		update members set point = point +10 where id =#{id} 
	</update> 
	  
	  
	<!-- 좋아요 취소시 10point 감소 --> 
	<update id="deletePoint" parameterType="AlMember"> 
		update members set point = point -10 where id =#{id} 
	</update> 
	
	  
	
	<!-- 회원가입시 현재 몸무게 입력 --> 
   <insert id="myFirstWeight" parameterType="AlWeight"> 
      insert into myweight(mem_id, weight, regdate, weight_id)  
      values(#{mem_id}, #{weight}, to_char(sysdate, 'yyyy-mm-dd'), myweight_seq.nextval) 
   </insert> 
	
</mapper>