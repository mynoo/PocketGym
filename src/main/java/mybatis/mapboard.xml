<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapBoard">
	<insert id="insertBoard" parameterType="AlBoard">
		insert into boards (bo_id, mem_id, title, context, be_image, af_image, regdate) 
		values (boards_SEQ.nextval, #{mem_id}, #{title}, #{context}, #{be_image}, #{af_image}, sysdate)
	</insert>

	<select id="SelectTotalCount" resultType="int">
		select  count(*) as cnt from boards
		<if test="mode == 'title'">
			where title like #{keyword}
		</if>
		<if test="mode == 'context'">
			where context like #{keyword}
		</if>
		<if test="mode == 'mem_id'">
			where mem_id like #{keyword}
		</if>
		
	</select>
	<sql id="myselect">
		select b.bo_id, b.mem_id, b.title, b.context, b.be_image, b.af_image, b.regdate, m.nickname from boards b join members m on b.mem_id = m.id
	</sql> 	
	<select id="selectAll" resultType="AlBoard">
		<include refid="myselect" />
		<if test="mode == 'title'">
			where b.title like #{keyword} 
		</if>
		<if test="mode == 'context'">
			where b.context like #{keyword} 
		</if>
		<if test="mode == 'mem_id'">
			where b.mem_id like #{keyword} 
		</if>
		order by b.bo_id desc
	</select>	
	
	<!-- 좋아요순 top3가져오기 -->
	<select id="likeTopList" resultType="AlBoard">
		select ranking, bo_id, mem_id, title, context, be_image, af_image, regdate, likes from( select bo_id, mem_id, title, context, be_image, af_image, regdate, likes, rank() over(order by likes desc) as ranking from( select b.bo_id, b.mem_id, b.title, b.context, b.be_image, b.af_image, b.regdate, count(distinct l.mem_id) as likes from boards b inner join likeboard l on b.bo_id = l.bo_id group by b.bo_id, b.mem_id, b.title, b.context, b.be_image, b.af_image, b.regdate order by likes desc)) where ranking between 1 and 3
	</select>
	
	
	<!-- 한글의대한 정보 가져오기 -->
	<select id="selectById" parameterType="Integer" resultType="AlBoard">
		select * from boards where bo_id = #{bo_id}
	</select>
		
	<!-- 게시글수정 -->
	<update id="updateBoard" parameterType="AlBoard">
		update boards set 
		title=#{title}, context=#{context}, 
		be_image=#{be_image}, af_image=#{af_image}, regdate=sysdate
		where bo_id = #{bo_id} 
	</update>
	
	<!-- 게시글삭제 -->
	<delete id="deleteBoard" parameterType="int">
		delete from boards where bo_id = #{bo_id} 
	</delete>
	
	<!-- 나의sns확인 -->
	<select id="MyListCount" resultType="int">
		select  count(*) as cnt from boards where mem_id like #{keyword}
	</select>
	<select id="myBoardList" resultType="AlBoard">
		<include refid="myselect" />
		where b.mem_id like #{keyword} order by b.bo_id desc
	</select>	
	
	<!-- 좋아요 갯수 가져오기 -->
	<select id="countLike" resultType="int">
		select count(distinct mem_id) as likes from likeboard where bo_id = #{bo_id}
	</select>
	
	<!-- 좋아요 추가 -->
	<insert id="insertLike" parameterType="AlBoard">
		insert into likeboard (bo_id, mem_id) values (#{bo_id}, #{mem_id})
	</insert>
	
	
	<!-- 좋아요 취소 -->
	<delete id="deleteLike" parameterType="AlBoard">
		delete from likeboard where bo_id = #{bo_id} and mem_id = #{mem_id}
	</delete>
	
	<!-- 좋아요한 멤버 아이디가져오기 -->	
	<select id="likeList" parameterType="Integer" resultType="AlBoard">
		select mem_id from likeboard where bo_id = #{bo_id}
	</select>
	
	<!-- 조회수 가져오기 -->
	<select id="countReadHit" resultType="int">
		select count(mem_id) as likes from readhits where bo_id = #{bo_id}
	</select>
	
	<!-- 조회수 증가 -->
	<insert id="insertReadHit" parameterType="AlBoard">
		insert into readhits (bo_id, mem_id) values (#{bo_id}, #{mem_id})
	</insert>
	
</mapper>